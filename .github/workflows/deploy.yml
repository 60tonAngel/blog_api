name: Deploy Blog API

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  deployments: write
  checks: read
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o blog_api_linux
          mkdir -p release
          cp blog_api_linux release/
          cp config/config.yaml release/
          tar -czf blog_api.tar.gz release/

      - name: Delete existing release
        uses: actions/github-script@v6
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const release = releases.data.find(release => release.tag_name === "${{ github.ref_name }}");
            if (release) {
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.id
              });
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: blog_api.tar.gz
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            # 创建部署目录（如果不存在）
            mkdir -p /opt/blog_api
            cd /opt/blog_api
            
            # 下载最新版本
            echo "下载发布包..."
            wget -q https://github.com/${{ github.repository }}/releases/latest/download/blog_api.tar.gz
            
            # 解压并设置权限
            echo "解压文件..."
            tar xzf blog_api.tar.gz
            chmod +x blog_api_linux
            
            # 清理并重启服务
            echo "清理临时文件..."
            rm -f blog_api.tar.gz
            
            echo "重启服务..."
            sudo systemctl restart blog-api || true
            
            echo "部署完成"